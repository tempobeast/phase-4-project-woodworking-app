{"version":3,"sources":["styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","components/LoginForm.js","components/SignUpForm.js","components/LoginPage.js","components/NavBar.js","components/NewProject.js","components/ProjectCard.js","components/UserProjectList.js","components/AvailableProjectList.js","components/ProjectPage.js","components/App.js","reportWebVitals.js","index.js"],"names":["styled","div","COLORS","primary","secondary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","label","Textarea","textarea","Wrapper","Alert","span","Message","p","Error","children","LoginForm","onLogin","useState","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","navigate","useNavigate","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","json","user","htmlfor","type","id","autoComplete","value","onChange","target","required","map","err","SignUpForm","passwordConfirmation","setPasswordConfirmation","bio","setBio","imageUrl","setImageUrl","password_confirmation","img_url","htmlFor","rows","Logo","h1","section","Divider","hr","LoginPage","showLogin","setShowLogin","onClick","header","Nav","nav","NavBar","onLogoutClick","setSearch","to","as","Link","placeholder","NewProject","onNewProjectSubmit","updateProject","onUpdateProjectSubmit","title","tools_required","description","materials","time","instructions","formData","setFormData","handleChange","name","ProjectCard","project","onProjectButtonClick","onUpdateProjectClick","userId","all","onProjectCardClick","cardIds","user_id","className","src","alt","stopPropagation","follows","length","UserProjectList","allUserProjects","AvailableProjectList","projects","search","filterUserProjects","filter","find","follow","toLowerCase","includes","followed","ProjectPage","clickedProject","setClickedProject","cardStatus","setCardStatus","useParams","useEffect","clicked","console","log","handleClick","App","setUser","setProjects","setUpdateProject","setAllUserProjects","getProjects","followed_projects","projectId","deleteProject","updatedProjList","newUserProjList","followToDelete","deletedFollow","updatedUserProjList","project_id","follow_type","newFollowProject","updatedFollowOnProject","projId","r","path","element","newProject","updatedProject","updatedAllProjects","proj","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b39dd06.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border-radius: 6px;\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\n    0 0 0 1px rgb(10 10 10 / 2%);\n  padding: 16px;\n`;\n\nexport default Box;\n","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"grey\",\n    \"--accent\": \"white\",\n  },\n  secondary: {\n    \"--main\": \"rgb(223, 181, 29)\",\n    \"--accent\": \"indigo\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst FormField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport default FormField;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  margin-left: 50px;\n  margin-right: 50px;\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: #363636;\n  display: block;\n  font-size: 1rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  height: 4rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  resize: vertical;\n  margin-left: 50px;\n  margin_right: 50px;\n  overflow: scroll;\n`;\n\nexport default Textarea;\n","import styled from \"styled-components\";\n\nfunction Error({ children }) {\n  return (\n    <Wrapper>\n      <Alert>!</Alert>\n      <Message>{children}</Message>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: red;\n  background-color: mistyrose;\n  border-radius: 6px;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n`;\n\nconst Alert = styled.span`\n  background-color: white;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  font-weight: bold;\n  display: grid;\n  place-content: center;\n`;\n\nconst Message = styled.p`\n  margin: 0;\n`;\n\nexport default Error;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\n\nfunction LoginForm( {onLogin} ) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate()\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify ({ username, password }),\n        }).then((res) => {\n            if (res.ok) {\n                res.json().then((user) => onLogin(user))\n                navigate('/')\n            } else {\n                res.json().then((errors) => setErrors(errors));\n            }\n        })\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <FormField>\n                <Label htmlfor=\"username\">Username</Label>\n                <Input \n                    type=\"text\"\n                    id=\"username\"\n                    autoComplete=\"off\"\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Label htmlfor=\"password\">Password</Label>\n                <Input\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Button type=\"submit\">\n                    {isLoading ? \"Loading...\" : \"Login\"}\n                </Button>\n            </FormField>\n            <FormField>\n                { errors ? \n                errors.map((err) => (<Error key={err}>{err}</Error>)) \n                : null}\n            </FormField>\n        </form>\n    )\n}\n\nexport default LoginForm","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n\nfunction SignUpForm( {onLogin} ) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [errors, setErrors] = useState([]) \n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors([]);\n        setIsLoading(true);\n        fetch('/signup', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username,\n                password,\n                password_confirmation: passwordConfirmation,\n                img_url: imageUrl,\n                bio,\n            }),\n        }).then((res) => {\n            setIsLoading(false);\n            if (res.ok) {\n                res.json().then((user) => onLogin(user))\n            } else {\n                res.json().then((errors) => setErrors(errors))\n            }\n        });\n    }\n    \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <FormField>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                type=\"text\"\n                id=\"username\"\n                autoComplete=\"off\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"current-password\"\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"password\">Password Confirmation</Label>\n                <Input\n                type=\"password\"\n                id=\"password_confirmation\"\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                autoComplete=\"current-password\"\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"imageUrl\">Profile Image</Label>\n                <Input\n                type=\"text\"\n                id=\"imageUrl\"\n                value={imageUrl}\n                onChange={(e) => setImageUrl(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Label htmlFor=\"bio\">Bio</Label>\n                <Textarea\n                rows=\"3\"\n                id=\"bio\"\n                value={bio}\n                onChange={(e) => setBio(e.target.value)}\n                />\n            </FormField>\n            <FormField>\n                <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n            </FormField>\n            <FormField>\n                {errors ? errors.map((err) => (\n                <Error key={err}>{err}</Error>\n                )) : null}\n            </FormField>\n        </form>\n    )\n}\n\nexport default SignUpForm","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\nimport { Button } from \"../styles\";\n\nfunction LoginPage({ onLogin }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <Wrapper>\n      <Logo>Wood Shop</Logo>\n      {showLogin ? (\n        <>\n          <LoginForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Don't have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(false)}>\n              Sign Up\n            </Button>\n          </p>\n        </>\n      ) : (\n        <>\n          <SignUpForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Already have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(true)}>\n              Log In\n            </Button>\n          </p>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Arial\";\n  font-size: 3rem;\n  color: blue;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default LoginPage","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Button, FormField, Input } from \"../styles\";\n\nfunction NavBar({ onLogoutClick, setSearch }) {\n\n  function handleChange(e) {\n    setSearch(e.target.value)\n  }\n\n  return (\n    <Wrapper>\n      <Logo>\n        <Link to=\"/\">The Cut List</Link>\n      </Logo>\n      <Nav>\n      <Button as={Link} to=\"/\">\n          My Projects\n        </Button>\n      <Button as={Link} to=\"/projects\">\n          Available Projects\n        </Button>\n        <Button as={Link} to=\"/new\">\n          New Project\n        </Button>\n        <Button variant=\"outline\" onClick={onLogoutClick}>\n          Logout\n        </Button>\n      </Nav>\n      <FormField >\n        <Input type=\"text\" placeholder=\"search\" onChange={handleChange} />\n      </FormField>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst Logo = styled.h1`\n  font-family: \"Arial\";\n  font-size: 3rem;\n  color: rgb(223, 181, 29);\n  margin: 0;\n  line-height: 1;\n\n  a {\n    color: rgb(223, 181, 29);\n    text-decoration: none;\n  }\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  gap: 4px;\n  position: absolute;\n  right: 8px;\n`;\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n\nfunction NewProject({ onNewProjectSubmit, isLoading, errors, updateProject, onUpdateProjectSubmit }) {\n    \n    const [formData, setFormData] = useState(\n        updateProject ? updateProject :\n        { \n        title: \"\",\n        tools_required: \"\",\n        description: \"\",\n        materials: \"\",\n        time: \"\",\n        instructions: \"\",\n        img_url: \"\",\n    })\n\n    function handleChange(e) {\n        setFormData({...formData,\n            [e.target.name]: e.target.value})\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onNewProjectSubmit(formData)\n    }\n\n    function handleUpdate(e) {\n        e.preventDefault();\n        onUpdateProjectSubmit(formData)\n    }\n\n    return (\n        <>\n            <h3>Create a new project</h3>\n            <form onSubmit={updateProject ? handleUpdate : handleSubmit}>\n            <FormField>\n                <Label htmlfor=\"title\">Title</Label>\n                <Input \n                    type=\"text\"\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    value={formData.title}\n                    onChange={handleChange}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Label htmlfor=\"tools_required\">Tools Required</Label>\n                <Input\n                    type=\"text\"\n                    name=\"tools_required\"\n                    autoComplete=\"off\"\n                    value={formData.tools_required}\n                    onChange={handleChange}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Label htmlfor=\"description\">Description</Label>\n                <Textarea\n                    type=\"textarea\"\n                    name=\"description\"\n                    autoComplete=\"off\"\n                    value={formData.description}\n                    onChange={handleChange}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Label htmlfor=\"materials\">Materials</Label>\n                <Input\n                    type=\"text\"\n                    name=\"materials\"\n                    autoComplete=\"off\"\n                    value={formData.materials}\n                    onChange={handleChange}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Label htmlfor=\"time\">Time to complete</Label>\n                <Input\n                    type=\"number\"\n                    name=\"time\"\n                    autoComplete=\"off\"\n                    value={formData.time}\n                    onChange={handleChange}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Label htmlfor=\"instructions\">Instructions</Label>\n                <Textarea\n                    type=\"textarea\"\n                    name=\"instructions\"\n                    autoComplete=\"off\"\n                    value={formData.instructions}\n                    onChange={handleChange}\n                    required\n                />\n            </FormField>\n            <FormField>\n                <Label htmlfor=\"img_url\">Add an image</Label>\n                <Input\n                    type=\"text\"\n                    name=\"img_url\"\n                    autoComplete=\"off\"\n                    value={formData.img_url}\n                    onChange={handleChange}\n                />\n            </FormField>\n            <FormField>\n                <Button type=\"submit\">\n                    {isLoading ? \"Loading...\" : updateProject ? \"Update Project\" : \"Submit Project\"}\n                </Button>\n            </FormField>\n            <FormField>\n                { errors ? \n                errors.map((err) => (<Error key={err}>{err}</Error>)) \n                : null}\n            </FormField>\n        </form>\n    </>\n    )\n}\n\nexport default NewProject","import React from \"react\";\nimport '../App.css';\n\nfunction ProjectCard({ project, onProjectButtonClick, onUpdateProjectClick, userId, all, onProjectCardClick }) {\n    const {title, time, description, img_url} = project\n\n    const cardIds = () => {\n        if (project.user_id === userId) {\n            return \"user_authored_project\"\n        } else if (project.user_id !== userId && all === true) {\n            return \"all_projects\"\n        } else {\n            return \"followed_project\"\n        }\n    }\n\n    function handleUpdateClick(e) {\n        e.stopPropagation();\n        onUpdateProjectClick(project, e)\n    }\n\n    function handleButtonClick(e) {\n        e.stopPropagation();\n        onProjectButtonClick(project.id, e)\n    }\n\n    function handleCardClick(e) {\n        onProjectCardClick(project.id)\n    }\n\n    return (\n        <div className=\"project_card\" id={cardIds()} onClick={handleCardClick}>\n            <img src={img_url} alt={title} className=\"project_image\"/>\n            <h3>{title}</h3>\n            <p>Time: {time} hrs</p>\n            <p className=\"project_card_details\">{description}</p>\n            <p>{project.user ? `By: ${project.user.username}` : \"User Authored Project\"}</p>\n            <button value={cardIds()} onClick={handleButtonClick}>{cardIds() === \"user_authored_project\" ? \"delete project\" : cardIds() === \"followed_project\" ? \"remove project\" : \"add project\"}</button>\n            {cardIds() === \"user_authored_project\" ? <button value=\"update_project\" onClick={handleUpdateClick}>update project</button> : null}\n            <p>{project.follows ? `follows: ${project.follows.length}` : null}</p>\n        </div>\n    )\n}\n\nexport default ProjectCard","import React from \"react\";\nimport ProjectCard from './ProjectCard'\nimport '../App.css'\n\nfunction UserProjectList({ user, onProjectButtonClick, userId, onUpdateProjectClick, onProjectCardClick, allUserProjects }) {\n\n    return (\n        <div>\n            <h2>{user.username}'s Projects</h2>\n            {allUserProjects.map((project) => <ProjectCard project={project} key={project.id} onProjectButtonClick={onProjectButtonClick} userId={userId} onUpdateProjectClick={onUpdateProjectClick} onProjectCardClick={onProjectCardClick}/>)}\n            {/* {user.projects.map((project) => <ProjectCard project={project} key={project.id} onProjectButtonClick={onProjectButtonClick} userId={userId} onUpdateProjectClick={onUpdateProjectClick} followed={false} onProjectCardClick={onProjectCardClick}/>)}\n            {user.followed_projects.map((project) => <ProjectCard project={project} key={project.id} onProjectButtonClick={onProjectButtonClick} userId={userId} followed={true} onProjectCardClick={onProjectCardClick}/>)} */}\n        </div>\n    )\n}\n\nexport default UserProjectList","import React from \"react\";\nimport ProjectCard from './ProjectCard'\nimport '../App.css'\n\nfunction AvailableProjectList({ projects, onProjectButtonClick, userId, search, onProjectCardClick }) {\n\n    const filterUserProjects = projects\n    .filter((project) => project.user_id !== userId)\n    .filter((project) => project.follows < 1 || project.follows.find((follow) => follow.user_id !== userId))\n    .filter((project) => project.title.toLowerCase().includes(search.toLowerCase()))\n\n    return (\n        <div>\n            <h2>Available Projects:</h2>\n            {filterUserProjects.map((project) => <ProjectCard all={true} project={project} key={project.id} onProjectButtonClick={onProjectButtonClick} userId={userId} followed={false} onProjectCardClick={onProjectCardClick}/>)}\n        </div>\n    )\n}\n\nexport default AvailableProjectList","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"../styles\";\nimport { useParams } from \"react-router-dom\"\n\nfunction ProjectPage({ userId, onProjectButtonClick, onUpdateProjectClick, projects }) {\n\n    const [clickedProject, setClickedProject] = useState({})\n    const [cardStatus, setCardStatus] = useState('')\n\n    const {id} = useParams();\nuseEffect(() => {\n     fetch(`/projects/${id}`)\n    .then((res) => res.json())\n    .then((clicked) => {\n      setClickedProject(clicked)\n        if (clicked.user_id === userId) {\n            setCardStatus(\"user_authored_project\")\n        } else if (clicked.follows.find((follow) => follow.user_id === userId)) {\n            setCardStatus(\"followed_project\")\n        } else {\n            setCardStatus(\"all_projects\")\n        }\n    })\n}, [])\n    console.log(clickedProject)\n\n    const {title, img_url, follows, instructions, materials, time, tools_required, user, description} = clickedProject\n\n    // const materialsToDisplay = materials.split(', ')\n\n    // const cardIds = () => {\n    //     if (clickedProject.user_id === userId) {\n    //         return \"user_authored_project\"\n    //     } else if (clickedProject.follows.find((follow) => follow.user_id === userId)) {\n    //         return \"followed_project\"\n    //     } else {\n    //         return \"all_projects\"\n    //     }\n    // }\n\nfunction handleClick(e) {\n    onProjectButtonClick(clickedProject.id, e)\n}\n\nfunction handleUpdateClick(e) {\n    onUpdateProjectClick(clickedProject, e)\n}\n\n    return (\n        <div className=\"project_page\">\n            <img src={img_url} alt={title} className=\"project_page_img\"/>\n            {cardStatus === \"all_projects\" ? <Button onClick={handleClick} className=\"project_page_button\">add project</Button> : null }\n            <h1>{title}</h1>\n            <h3>{ user ? `By: ${user.username}` : \"By: Me\"}</h3>\n            <h4>Time: {time}</h4>\n            <p>{description}</p>\n            <div>\n                <h4>Materials used: </h4>\n                <ul>\n                    <li>{materials}</li>\n                    {/* {materialsToDisplay[0].map((material) => <li>{material}</li>)} */}\n                </ul>\n            </div>\n            <div>\n                <h4>Tools used: </h4>\n                <ul>\n                    {tools_required}\n                </ul>\n            </div>\n            <p>{instructions}</p>\n            <Button value={cardStatus} onClick={handleClick}>{cardStatus === \"user_authored_project\" ? \"delete project\" : cardStatus === \"followed_project\" ? \"remove project\" : \"add project\"}</Button>\n            {cardStatus === \"user_authored_project\" ? <Button value=\"update_project\" onClick={handleUpdateClick}>update project</Button> : null}\n        </div>\n    )\n}\n\nexport default ProjectPage","import '../App.css';\nimport { useEffect, useState } from 'react';\nimport { Route, Routes, useNavigate} from 'react-router-dom';\n// import Header from './Header'\nimport LoginPage from './LoginPage';\nimport NavBar from './NavBar';\nimport NewProject from './NewProject';\nimport UserProjectList from './UserProjectList';\nimport AvailableProjectList from './AvailableProjectList';\nimport ProjectPage from './ProjectPage';\n\n// import ProjectList from './ProjectList';\n\nfunction App() {\n\n  const [user, setUser] = useState(null)\n  const [errors, setErrors] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [projects, setProjects] = useState([])\n  const [updateProject, setUpdateProject] = useState(null)\n  const [search, setSearch] = useState('')\n  // const [clickedProject, setClickedProject] = useState('')\n  const [allUserProjects, setAllUserProjects] = useState([])\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    fetch('/me').then((res) => {\n      if (res.ok) {\n        res.json().then((user) =>{\n          console.log(user)\n          getProjects();\n          // setUser(user);\n          console.log(\"user projects:\", user.projects)\n          setAllUserProjects([...user.projects, ...user.followed_projects])\n          console.log([...user.projects, ...user.followed_projects])\n        })\n      }\n    });\n  }, [user])\n\n  const getProjects = () => {\n    fetch('/projects')\n    .then((res) => res.json())\n    .then((projects) => {\n      setProjects(projects)\n    })\n  }\n\n  console.log(user)\n  console.log(allUserProjects)\n\n  function onNewProjectSubmit(formData) {\n    setErrors([]);\n    setIsLoading(true);\n    fetch ('/projects', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"title\": formData.title,\n        \"tools_required\": formData.tools_required,\n        \"description\": formData.description,\n        \"materials\": formData.materials,\n        \"time\": formData.time,\n        \"instructions\": formData.instructions,\n        \"img_url\": formData.img_url\n      })\n    })\n    .then((res) => {\n      setIsLoading(false);\n      if (res.ok) {\n        res.json().then((newProject) => { \n          setUser({...user, \n            projects: [...user.projects, newProject]\n          })\n          setProjects([...projects, newProject])\n          setAllUserProjects([newProject, ...allUserProjects])\n          navigate('/')\n        })\n      } else {\n        res.json().then((errors) => setErrors(errors))\n        }\n    })\n  }\n\n  function onProjectButtonClick(projectId, e) {\n    if (e.target.value === \"user_authored_project\") {\n      fetch(`/projects/${projectId}`, {\n        method: 'DELETE',\n      })\n      .then((res) => res.json())\n      .then((deleteProject) => { \n        const updatedProjList = projects.filter((project) => project.id !== deleteProject.id)\n        setProjects(updatedProjList)\n        // const updatedUserProjList = user.projects.filter((project) => project.id !== deleteProject.id)\n        // setUser({...user, \n        //   projects: updatedUserProjList\n        // })\n        const newUserProjList = allUserProjects.filter((project) => project.id !== deleteProject.id)\n        setAllUserProjects(newUserProjList)\n      })\n    } else if (e.target.value === \"followed_project\") {\n      const followedProject = allUserProjects.find((project) => project.id === projectId)\n      const followToDelete = followedProject.follows.find((follow) => follow.user_id === user.id)\n      fetch(`/follows/${followToDelete.id}`, {\n        method: 'DELETE',\n      })\n      .then((res) => res.json())\n      .then((deletedFollow) => {\n        // const followProject = user.followed_projects.find((project) => project.id === deletedFollow.project_id)\n        // setProjects([...projects, followProject])\n        // const updatedFollowList = user.follows.filter((follow) => follow.id !== deletedFollow.id)\n        // const updatedUserFollowProjList = user.followed_projects.filter((project) => project.id !== deletedFollow.project_id)\n        // setUser({...user,\n        // followed_projects: updatedUserFollowProjList,\n        // // follows: updatedFollowList\n        // })\n        const updatedUserProjList = allUserProjects.filter((project) => project.id !== deletedFollow.project_id)\n        setAllUserProjects(updatedUserProjList)\n        getProjects()\n        navigate('/')\n      }) \n    } else {\n      fetch('/follows', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          project_id: projectId,\n          user_id: user.id,\n          follow_type: \"todo\"\n        })\n      })\n      .then((res) => res.json())\n      .then((follow) => {\n        // const updatedFollowList = [...user.follows, follow]\n        const newFollowProject = projects.find((project) => project.id === follow.project_id)\n        const updatedFollowOnProject = {...newFollowProject, \n          follows: [...newFollowProject.follows, follow]}\n        // const updatedUserFollowProjList = [...user.followed_projects, updatedFollowOnProject]\n        // const updatedProjects = projects.filter((project) => project.id !== follow.project_id)\n        // setProjects(updatedProjects)\n        // setUser({...user,\n        // followed_projects: updatedUserFollowProjList,\n        // follows: updatedFollowList\n        // })\n        setAllUserProjects([...allUserProjects, updatedFollowOnProject])\n        getProjects()\n        navigate('/')\n      })\n    }\n  } \n\n  function onUpdateProjectSubmit(formData) {\n    console.log(formData.description)\n    fetch(`/projects/${formData.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"title\": formData.title,\n        \"tools_required\": formData.tools_required,\n        \"description\": formData.description,\n        \"materials\": formData.materials,\n        \"time\": formData.time,\n        \"instructions\": formData.instructions,\n        \"img_url\": formData.img_url\n      })\n    })\n    .then((res) => res.json())\n    .then((updatedProject) => {\n      const updatedAllProjects = projects.filter((proj) => proj.id !== updatedProject.id);\n      setProjects([...updatedAllProjects, updateProject]);\n      const updatedUserProjList = user.projects.filter ((proj) => proj.id !== updateProject.id);\n      setUser({...user, \n        projects:[...updatedUserProjList, updatedProject]});\n        navigate('/')\n    })\n  }\n\n  function onLogoutClick() {\n    fetch(\"/logout\", \n    { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n        setAllUserProjects([])\n      }\n    });\n  }\n\n  function onUpdateProjectClick(project) {\n    setUpdateProject(project)\n    navigate('/new')\n  }\n\n  function onProjectCardClick(projId) {\n    \n   navigate(`/projects/${projId}`)\n   \n   \n  }\n\n  if (!user) return <LoginPage onLogin={setUser} />\n\n  return (\n    <div className='App'>\n      {/* <Header /> */}\n      <main>\n        <NavBar onLogoutClick={onLogoutClick} setSearch={setSearch} />\n        <Routes>\n          <Route path=\"/new\" element={\n            <NewProject onNewProjectSubmit={onNewProjectSubmit} errors={errors} isLoading={isLoading} updateProject={updateProject} onUpdateProjectSubmit={onUpdateProjectSubmit}/>\n          }\n          />\n          <Route path=\"/projects\" element={\n            <AvailableProjectList projects={projects} \n            onProjectButtonClick={onProjectButtonClick} userId={user.id} search={search} onProjectCardClick={onProjectCardClick}/>\n          }\n          />\n          <Route path=\"/\" element={\n            <UserProjectList user={user} userId={user.id} projects={projects} onProjectButtonClick={onProjectButtonClick} onUpdateProjectClick={onUpdateProjectClick} search={search} onProjectCardClick={onProjectCardClick} allUserProjects={allUserProjects}/>\n          }\n          />\n          <Route path=\"/projects/:id\" element={ \n            <ProjectPage projects={projects} \n            // clickedProject={clickedProject} \n            userId={user.id} onProjectButtonClick={onProjectButtonClick} onUpdateProjectClick={onUpdateProjectClick}/>\n          }\n          />\n        </Routes>\n      </main>\n\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}